
package interfaces;

import com.alee.laf.button.WebButtonUI;
import com.alee.laf.combobox.WebComboBoxUI;
import com.alee.laf.text.WebPasswordFieldUI;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.net.InetSocketAddress;
import java.net.Socket;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import net.java.balloontip.BalloonTip;
import net.java.balloontip.styles.RoundedBalloonStyle;
import net.java.balloontip.utils.TimingUtils;


public class login extends javax.swing.JFrame {

    
    int timeRun;
    
    public login() {
        initComponents();
        ImageIcon ii = new ImageIcon(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/new logo.png")));
        setIconImage(ii.getImage());
        passFldPass.setUI(new WebPasswordFieldUI());
        cmbUser.setUI(new WebComboBoxUI());
        btnLogin.setUI(new WebButtonUI());
        loginOpen();
        setTime();
        setExtendedState(MAXIMIZED_BOTH);
        
    }
    
   static byte count = 0;
   
   void setTime() {
        new Timer(0, new ActionListener() {
            
            @Override
            public void actionPerformed(ActionEvent e) {
                Date d = new Date();
                SimpleDateFormat sd = new SimpleDateFormat("hh:mm:ss a");
                String s = sd.format(d);
                lblClock.setText(s);
            }
        }).start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbUser = new javax.swing.JComboBox();
        passFldPass = new javax.swing.JPasswordField();
        lblClock = new javax.swing.JLabel();
        lblPower = new javax.swing.JLabel();
        lblTask = new javax.swing.JLabel();
        lblNotifi = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblPass = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnLogin = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jblBackground = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmbUser.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cmbUser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select User" }));
        cmbUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbUserMouseClicked(evt);
            }
        });
        cmbUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUserActionPerformed(evt);
            }
        });
        getContentPane().add(cmbUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 383, 300, 30));

        passFldPass.setBackground(new java.awt.Color(83, 83, 83));
        passFldPass.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        passFldPass.setForeground(new java.awt.Color(255, 255, 255));
        passFldPass.setOpaque(false);
        passFldPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                passFldPassKeyPressed(evt);
            }
        });
        getContentPane().add(passFldPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 460, 300, 30));

        lblClock.setFont(new java.awt.Font("Calibri Light", 0, 24)); // NOI18N
        lblClock.setForeground(new java.awt.Color(255, 255, 255));
        lblClock.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lblClockPropertyChange(evt);
            }
        });
        getContentPane().add(lblClock, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 0, 190, 40));

        lblPower.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/powerSelected.png"))); // NOI18N
        lblPower.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblPowerMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblPowerMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblPowerMouseExited(evt);
            }
        });
        getContentPane().add(lblPower, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 0, -1, -1));

        lblTask.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/taskBar.png"))); // NOI18N
        getContentPane().add(lblTask, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 40));

        lblNotifi.setForeground(new java.awt.Color(255, 51, 51));
        getContentPane().add(lblNotifi, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 510, 310, 40));

        jLabel4.setBackground(new java.awt.Color(0, 0, 0));
        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("User Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 350, -1, -1));

        lblPass.setBackground(new java.awt.Color(0, 0, 0));
        lblPass.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblPass.setText("Password");
        getContentPane().add(lblPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 430, -1, -1));

        jLabel3.setBackground(new java.awt.Color(102, 102, 102));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/login/buildPcLogo.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 200, 128, 128));

        btnLogin.setFont(new java.awt.Font("Segoe UI Light", 0, 24)); // NOI18N
        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        getContentPane().add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 560, 300, 40));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Login");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 160, -1, -1));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/login/loginback.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1370, 750));

        jblBackground.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/login Backgroud.png"))); // NOI18N
        getContentPane().add(jblBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 770));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbUserMouseClicked

    }//GEN-LAST:event_cmbUserMouseClicked

    private void cmbUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUserActionPerformed
        // TODO add your handling code here: Vector v = new Vector();

        if (cmbUser.getSelectedIndex() == 0) {
            ImageIcon ii = new ImageIcon(getClass().getResource("/images/login/buildPcLogo.png"));
            ii.getImage();
            jLabel3.setIcon(ii);
            passFldPass.setVisible(false);
            lblPass.setVisible(false);
            btnLogin.setVisible(false);
//            lblPassBack.setVisible(false);
        } else {
            setImage();
            passFldPass.setVisible(true);
            lblPass.setVisible(true);
            btnLogin.setVisible(true);
//            lblPassBack.setVisible(true);
            passFldPass.grabFocus();
        }
//        lblPassBack.setVisible(false);

    }//GEN-LAST:event_cmbUserActionPerformed
    
    Configs con = new Configs();
    BufferedImage image = null;
    
    public void setImage() {
        try {
            image = ImageIO.read(new File(con.getProp(cmbUser.getSelectedItem().toString())));
            ImageIcon ii = new ImageIcon(ScaledImage(image, jLabel3.getWidth(), jLabel3.getHeight()));
            jLabel3.setIcon(ii);
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    private Image ScaledImage(Image img, int w, int h) {
        
        BufferedImage resizedImage = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = resizedImage.createGraphics();
        g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);
        g2.drawImage(img, 0, 0, w, h, null);
        g2.dispose();
        return resizedImage;
        
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

    }//GEN-LAST:event_formWindowOpened

    private void passFldPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passFldPassKeyPressed
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            loginToSystem();
        }
    }//GEN-LAST:event_passFldPassKeyPressed

    private void lblPowerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPowerMouseClicked
        // TODO add your handling code here:
        System.exit(1);
    }//GEN-LAST:event_lblPowerMouseClicked

    private void lblPowerMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPowerMouseEntered
        
        ImageIcon ii = new ImageIcon(getClass().getResource("/images/power.png"));
        lblPower.setIcon(ii);
    }//GEN-LAST:event_lblPowerMouseEntered

    private void lblPowerMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblPowerMouseExited
        
        ImageIcon ii = new ImageIcon(getClass().getResource("/images/powerSelected.png"));
        lblPower.setIcon(ii);
    }//GEN-LAST:event_lblPowerMouseExited
    
    Date start = null;
    Date end = null;
    private void lblClockPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lblClockPropertyChange
        
        if (lblClock.getText().equals("02:09:30 PM")) {
            new LockDown().setVisible(true);
        }
    }//GEN-LAST:event_lblClockPropertyChange

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        
        loginToSystem();
    }//GEN-LAST:event_btnLoginActionPerformed
    
    public void adminOnly() {
        try {
            ResultSet r = new JDBC().getData("select * from user where level='admin' or level like'%manager%'");
            Vector v = new Vector();
            while (r.next()) {
                v.add(r.getString("userName"));
            }
            cmbUser.setModel(new DefaultComboBoxModel(v));
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton btnLogin;
    private static javax.swing.JComboBox cmbUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jblBackground;
    private javax.swing.JLabel lblClock;
    private javax.swing.JLabel lblNotifi;
    private static javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblPower;
    private javax.swing.JLabel lblTask;
    private static javax.swing.JPasswordField passFldPass;
    // End of variables declaration//GEN-END:variables

    static void loginOpen() {
        // TODO add your handling code here:
        passFldPass.setVisible(false);
        lblPass.setVisible(false);
        btnLogin.setVisible(false);
        passFldPass.setText("");
//        lblPassBack.setVisible(false);

        Vector v = new Vector();
        try {
            ResultSet r = new JDBC().getData("SELECT userName FROM user");
            v.add("Select User Name");
            v.add("Olympus");
            while (r.next()) {
                v.add(r.getString("userName"));
            }
            cmbUser.setModel(new DefaultComboBoxModel(v));
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    RoundedBalloonStyle style = new RoundedBalloonStyle(10, 5, Color.yellow, Color.yellow);
    
    // Login method code start
    
    void loginToSystem() {
        if (passFldPass.getPassword().equals("")) {
            lblNotifi.setText("Plese enter the password");
        } else if (cmbUser.getSelectedItem().equals("Olympus") && String.valueOf(passFldPass.getPassword()).equals("123")) {
            
            Home.userName = "Olympus";
            Home.level = "admin";
            Home.password = "123";
            MenuUser.userName = "Olympus";
            MenuUser.level = "admin";
            
            if (Home.users.containsKey(cmbUser.getSelectedItem().toString())) {
                Home o = (Home) Home.users.get(cmbUser.getSelectedItem().toString());
                o.setVisible(true);
                
            } else {
                Home b = new Home();
                Home.users.put(cmbUser.getSelectedItem().toString(), b);
                b.setVisible(true);
                
            }
            
            this.dispose();
        } else if (count >= 2) {
            new Thread(new Runnable() {
                
                @Override
                public void run() {
                        new LockDown().setVisible(true);
                        LockDown.lblMessage.setText("You have try to login using wrong username or password. Please contact to Administrator");
                    try {
                        new JDBC().putData("INSERT INTO message(sender,receiver,message,m_status,datetime) VALUES('Olympus systems','"+cmbUser.getSelectedItem()+"','Someone try to access the system using this user name','Not Read','"+new Date().getMonth()+"/"+new Date().getDate()+" at "+lblClock.getText()+"')");
                        final Socket sock = new Socket();
                        final InetSocketAddress add = new InetSocketAddress("www.google.com", 80);
                        sock.connect(add, 3000);
                        if (sock.isConnected()) {
                            sendEmail.sendEmail(new Configs().getProp("email"), new Configs().getProp("pass"), "thusitha.blade@gmail.com", "Intruder",lblClock.getText()+"\n"+ "someone trying to connect. \n Selected User:"+cmbUser.getSelectedItem().toString());
                        }
                    } catch (Exception e) {
//                        e.printStackTrace();
                        System.out.println("hjgf");
                    }
                }
            }).start();
            
        } else {
            String tips = "";
            try {
                ResultSet r = new JDBC().getData("SELECT * FROM user WHERE userName='" + cmbUser.getSelectedItem() + "'");
                if (r.first()) {
                    String user = r.getString("userName");
                    String pass = r.getString("passWord");
                    tips = r.getString("tip");
                    if (user.equals(cmbUser.getSelectedItem()) && pass.equals(String.valueOf(passFldPass.getPassword()))) {
//set to username, userlevel and password to static variables
                        Home.userName = r.getString("userName");
                        Home.level = r.getString("level");
                        Home.password = String.valueOf(passFldPass.getPassword());
                        MenuUser.userName = r.getString("userName");
                        MenuUser.level = r.getString("level");

//add or check userkey is exist in the HashTable
                        if (Home.users.containsKey(cmbUser.getSelectedItem().toString())) {
                            Home o = (Home) Home.users.get(cmbUser.getSelectedItem().toString());
                            o.setVisible(true);
                            
                        } else {
                            Home b = new Home();
                            Home.users.put(cmbUser.getSelectedItem().toString(), b);
                            b.setVisible(true);
                            
                        }
                        this.dispose();
                    } else {
                        lblNotifi.setText("Your password is wrong. Please try again.");
                        BalloonTip tip = new BalloonTip(passFldPass, "Password tip :" + tips, style, false);
                        tip.setVisible(true);
                        TimingUtils.showTimedBalloon(tip, 3000);
                        
                        passFldPass.setText("");
                        passFldPass.grabFocus();
                    }
                }
                
            } catch (Exception e) {
                e.printStackTrace();
            }
            count++;
            passFldPass.setText("");
        }
    }
    
    // Login method code END
    
}
